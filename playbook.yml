---
- hosts: kali
  become: true
  vars:
    username: vagrant
    passhash: "{{ lookup('file', './secrets/pass.txt') }}"
    user_owned: &USER_OWNED
      owner: "{{ username }}"
      group: "{{ username }}"
    www_owned: &WWW_OWNED
      owner: www-data
      group: www-data
  tasks:
    - name: Install apt packages
      apt:
        pkg:
          - bat
          - beef-xss
          - bloodhound
          - bzip2
          - curl
          - docker.io
          - enum4linux
          - exa
          - exploitdb-papers
          - feroxbuster
          - fzf
          - gcc-multilib
          - ghidra
          - gobuster
          - golang
          - impacket-scripts
          - jq
          - kerberoast
          - ltrace
          - masscan
          - mingw-w64
          - nbtscan
          - nikto
          - nmap
          - onesixtyone
          - openresolv
          - oscanner
          - payloadsallthethings
          - rbenv
          - redis-tools
          - rlwrap
          - ruby-build
          - seclists
          - sipvicious
          - samba
          - smbclient
          - smbmap
          - snmp
          - sshpass
          - sslscan
          - strace
          - tnscmd10g
          - ufw
          - vsftpd
          - whatweb
          - wine
          - wireguard
          - wkhtmltopdf
          - wpscan
          - xclip
          - xsel
          - zim
        update_cache: true
    - name: Autoremove unused packages
      apt:
        autoremove: true
    - name: Configure user {{ username }}
      user:
        name: "{{ username }}"
        groups:
          - adm
          - audio
          - bluetooth
          - cdrom
          - dialout
          - dip
          - docker
          - floppy
          - kaboxer
          - netdev
          - plugdev
          - scanner
          - sudo
          - vagrant
          - video
          - wireshark
          - www-data
        password: "{{ passhash }}"
        update_password: always
    - name: Set ownership for HTTP serve
      file:
        <<: *WWW_OWNED
        path: /var/www/html
        mode: "0775"
    - name: Set ownership for FTP serve
      file:
        <<: *WWW_OWNED
        path: /srv/tftp
        mode: "0775"
    - name: Symlink HTTP serve
      file:
        src: /var/www/html
        dest: /srv/http
        state: link
    - name: Download scripts and payloads
      get_url:
        <<: *USER_OWNED
        url: "{{ item.value }}"
        dest: "{{ item.key }}"
      with_dict:
        /srv/http/les.sh: https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh
        /srv/http/linpeas.sh: https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh
        /srv/http/lse.sh: https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh
        /srv/http/winpeas.bat: https://raw.githubusercontent.com/carlospolop/PEASS-ng/master/winPEAS/winPEASbat/winPEAS.bat
    - name: Clone useful repos
      git:
        repo: "{{ item.value }}"
        dest: "{{ item.key }}"
        update: no
      with_dict:
        /usr/share/static-binaries: https://github.com/andrew-d/static-binaries.git
    - name: Add directories
      file:
        <<: *USER_OWNED
        path: "/home/{{ username }}/{{ item }}"
        state: directory
      loop:
        - .config/gtk-3.0
    - name: Add files
      copy: &COPY_DOTFILES
        <<: *USER_OWNED
        src: "./files/{{ item.key }}"
        dest: "/home/{{ username }}/{{ item.value }}"
      with_dict:
        bookmarks.txt: .config/gtk-3.0/bookmarks
        pixel.png: ../../srv/http/pixel.png
        profile.sh: .profile
        tmux.conf: .tmux.conf
        user-dirs.dirs: .config/user-dirs.dirs
        user-dirs.conf: .config/user-dirs.conf
        zshrc.sh: .zshrc
    - name: Add templated dotfiles
      template: *COPY_DOTFILES
      with_dict:
        gitconfig.ini: .gitconfig
    - name: Remove unwanted directories
      file:
        path: "/home/{{ username }}/{{ item }}"
        state: absent
      loop:
        - Desktop
        - Documents
        - Music
        - Pictures
        - Public
        - Templates
        - Videos
    - name: Symlink Desktop to share
      file:
        src: /share
        dest: "/home/{{ username }}/Desktop"
        state: link
    - name: Hush login
      copy:
        <<: *USER_OWNED
        dest: "/home/{{ username }}/.hushlogin"
        content: ""
    - name: Add SSH keys
      copy:
        <<: *USER_OWNED
        src: "./secrets/{{ item }}"
        dest: "/home/{{ username }}/.ssh/{{ item }}"
        mode: "0400"
      loop:
        - id_ed25519
        - id_ed25519.pub
    - name: Install go packages
      command:
        cmd: "go install {{ item }}"
      loop:
        - github.com/allanbreyes/kv@latest
    - name: Install AutoRecon
      command:
        cmd: python3 -m pip install git+https://github.com/Tib3rius/AutoRecon.git
        creates: /usr/local/bin/autorecon
    - name: Clean apt cache
      apt:
        autoclean: true
    - name: Install pip packages (Python 3)
      pip:
        name:
          - pwntools
          - ropper
          - tldr
        executable: /usr/bin/pip3
        state: latest
    - name: Install ruby packages
      community.general.gem:
        name: "{{ item }}"
        state: latest
      loop:
        - winrm
        - evil-winrm
    - name: Clone pwndbg
      git:
        repo: https://github.com/pwndbg/pwndbg
        dest: /usr/src/pwndbg
        update: no
    - name: Unzip rockyou
      command:
        cmd: gzip -d /usr/share/wordlists/rockyou.txt.gz
        creates: /usr/share/wordlists/rockyou.txt
